platform :osx, '10.15'

# Disable CocoaPods analytics
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

require 'rubygems/version'

# Удаляем устаревший lock-файл, если в нём зафиксирована старая версия Firebase.
def ensure_minimum_pod_version(lock_path, pod_name, min_version)
  return unless File.exist?(lock_path)

  contents = File.read(lock_path)
  version_match = contents.match(/#{Regexp.escape(pod_name)}[^0-9]*([0-9]+\.[0-9]+\.[0-9]+)/)
  return unless version_match

  begin
    current_version = Gem::Version.new(version_match[1])
    required_version = Gem::Version.new(min_version)
  rescue ArgumentError
    return
  end

  return unless current_version < required_version

  File.delete(lock_path)
  puts "Removed #{lock_path} to upgrade #{pod_name} from #{current_version} to >= #{required_version}."
end

firebase_min_version = '12.2.0'
ensure_minimum_pod_version(File.join(__dir__, 'Podfile.lock'), 'Firebase/Firestore', firebase_min_version)
ensure_minimum_pod_version(File.join(__dir__, 'Pods', 'Manifest.lock'), 'Firebase/Firestore', firebase_min_version)

project 'Runner', {
  'Debug'   => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Метод определения пути к Flutter SDK (восстановленный)
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'ephemeral', 'Flutter-Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure \"flutter pub get\" is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Flutter-Generated.xcconfig, then run \"flutter pub get\""
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_macos_podfile_setup

target 'Runner' do
  use_frameworks!

  # Устанавливаем зависимости Flutter и плагинов
  flutter_install_all_macos_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      other_cflags = config.build_settings['OTHER_CFLAGS']
      if other_cflags
        # Удаляем флаги '-gmodules' и '-G'
        flags = other_cflags.split(' ')
        flags = flags.reject { |f| f == '-gmodules' || f == '-G' }
        config.build_settings['OTHER_CFLAGS'] = flags.join(' ')
      end
      # ПОДНИМАЕМ минимальную версию macOS ДО 10.15
      if config.build_settings['MACOSX_DEPLOYMENT_TARGET'].to_f < 10.15
        config.build_settings['MACOSX_DEPLOYMENT_TARGET'] = '10.15'
      end
    end
    flutter_additional_macos_build_settings(target)
  end
end
